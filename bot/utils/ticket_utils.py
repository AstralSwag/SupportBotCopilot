from datetime import datetime
from typing import Optional
from sqlalchemy import select
from sqlalchemy.ext.asyncio import AsyncSession
from ..models.models import Ticket, User

async def get_active_ticket(session: AsyncSession, user_id: int, active_time: int) -> Optional[Ticket]:
    """
    –ü–æ–ª—É—á–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–π —Ç–∏–∫–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    Args:
        session: –°–µ—Å—Å–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        user_id: Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        active_time: –í—Ä–µ–º—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö, –≤ —Ç–µ—á–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ç–∏–∫–µ—Ç —Å—á–∏—Ç–∞–µ—Ç—Å—è –∞–∫—Ç–∏–≤–Ω—ã–º
        
    Returns:
        Optional[Ticket]: –ê–∫—Ç–∏–≤–Ω—ã–π —Ç–∏–∫–µ—Ç –∏–ª–∏ None
    """
    cutoff_time = datetime.utcnow().timestamp() - active_time
    
    # –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user = await session.scalar(
        select(User).where(User.telegram_id == user_id)
    )
    
    if not user:
        return None
    
    # –ù–∞—Ö–æ–¥–∏–º –∞–∫—Ç–∏–≤–Ω—ã–π —Ç–∏–∫–µ—Ç
    ticket = await session.scalar(
        select(Ticket)
        .where(Ticket.user_id == user.id)
        .where(Ticket.updated_at >= datetime.fromtimestamp(cutoff_time))
        .order_by(Ticket.updated_at.desc())
    )
    
    return ticket

def format_ticket_info(ticket: Ticket) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–∏–∫–µ—Ç–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    
    Args:
        ticket: –û–±—ä–µ–∫—Ç —Ç–∏–∫–µ—Ç–∞
        
    Returns:
        str: –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–∏–∫–µ—Ç–µ
    """
    status_emoji = {
        'new': 'üÜï',
        'in_progress': '‚è≥',
        'resolved': '‚úÖ',
        'closed': 'üîí'
    }
    
    return (
        f"{status_emoji.get(ticket.status, '‚ùì')} –¢–∏–∫–µ—Ç #{ticket.id}\n"
        f"–°—Ç–∞—Ç—É—Å: {ticket.status}\n"
        f"–°–æ–∑–¥–∞–Ω: {ticket.created_at.strftime('%d.%m.%Y %H:%M')}\n"
        f"–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {ticket.updated_at.strftime('%d.%m.%Y %H:%M')}"
    )
